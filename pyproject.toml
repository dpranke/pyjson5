[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "json5"
description = "A Python implementation of the JSON5 data format."
authors = [
    {name = "Dirk Pranke", email = "dpranke@chromium.org"},
]
keywords = [ "json5" ]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">= 3.8.0"
classifiers= [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]
dynamic = [ "version" ]

[project.optional-dependencies]
# Note that not everything is guaranteed to work on 3.8.
dev = [
    'build==1.2.2.post1',
    'coverage==7.5.4; python_version < "3.9"',
    'coverage==7.8.0; python_version >= "3.9"',
    'mypy==1.14.1; python_version < "3.9"',
    'mypy==1.15.0; python_version >= "3.9"',
    'pip==25.0.1',
    'pylint==3.2.7; python_version < "3.9"',
    'pylint==3.3.6; python_version >= "3.9"',
    'ruff==0.11.2',
    'twine==6.1.0',
    'uv==0.6.11',
]

[project.urls]
Repository = "https://github.com/dpranke/pyjson5"
Issues = "https://github.com/dpranke/pyjson5/issues"
Changelog = "https://github.com/dpranke/pyjson5/blob/master/README.md"

[project.scripts]
pyjson5 = "json5.tool:main"

[tool.pylint.basic]

# By default, pylint wants method names to be at most 31 chars long,
# but we want to allow up to 49 to allow for longer test names.
method-rgx = "[a-zA-Z_][a-zA-Z0-9_]{0,48}$"

# By default, pylint only allows UPPER_CASE constants, but we want to
# allow snake_case as well in some situations.
const-rgx = "[a-zA-Z_][a-zA-Z0-9_]{0,30}$"

# By default, pylint wants all parameter names to be at least two chars long,
# but we want to allow single-char parameter names as well.
argument-rgx = "[a-z_][a-z0-9_]{0,30}$"

# By default, pylint wants all variable names to be at least two chars long,
# but we want to allow single-char variable names as well.
variable-rgx = "[a-z_][a-z0-9_]{0,30}$"

[tool.pylint.main]
persistent = "yes"

[tool.pylint."message control"]
disable = [
    "broad-except",
    "fixme",
    "global-statement",
    "locally-disabled",
    "missing-docstring",
    "too-many-arguments",
    "too-few-public-methods",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-positional-arguments",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "unidiomatic-typecheck",
]

[tool.pylint.reports]
reports = "no"
score = "no"
[tool.ruff]
include = [ "run", "*/*.py" ]
line-length = 79

[tool.ruff.format]
quote-style = "single"

[tool.setuptools]
packages = [ "json5" ]

[tool.setuptools.dynamic]
version = {attr = "json5.__version__"}
